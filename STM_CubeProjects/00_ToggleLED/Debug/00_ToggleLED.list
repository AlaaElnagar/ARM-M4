
00_ToggleLED.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000674  08000194  08000194  00010194  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000808  08000810  00010810  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000808  08000808  00010810  2**0
                  CONTENTS
  4 .ARM          00000000  08000808  08000808  00010810  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000808  08000810  00010810  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000808  08000808  00010808  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  0800080c  0800080c  0001080c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00010810  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  08000810  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  08000810  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 0000002a  00000000  00000000  00010810  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000088e  00000000  00000000  0001083a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000002d5  00000000  00000000  000110c8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000000f8  00000000  00000000  000113a0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 000000c0  00000000  00000000  00011498  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0000162b  00000000  00000000  00011558  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00000ed5  00000000  00000000  00012b83  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00005ec4  00000000  00000000  00013a58  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000053  00000000  00000000  0001991c  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000002e0  00000000  00000000  00019970  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000194 <__do_global_dtors_aux>:
 8000194:	b510      	push	{r4, lr}
 8000196:	4c05      	ldr	r4, [pc, #20]	; (80001ac <__do_global_dtors_aux+0x18>)
 8000198:	7823      	ldrb	r3, [r4, #0]
 800019a:	b933      	cbnz	r3, 80001aa <__do_global_dtors_aux+0x16>
 800019c:	4b04      	ldr	r3, [pc, #16]	; (80001b0 <__do_global_dtors_aux+0x1c>)
 800019e:	b113      	cbz	r3, 80001a6 <__do_global_dtors_aux+0x12>
 80001a0:	4804      	ldr	r0, [pc, #16]	; (80001b4 <__do_global_dtors_aux+0x20>)
 80001a2:	f3af 8000 	nop.w
 80001a6:	2301      	movs	r3, #1
 80001a8:	7023      	strb	r3, [r4, #0]
 80001aa:	bd10      	pop	{r4, pc}
 80001ac:	20000000 	.word	0x20000000
 80001b0:	00000000 	.word	0x00000000
 80001b4:	080007f0 	.word	0x080007f0

080001b8 <frame_dummy>:
 80001b8:	b508      	push	{r3, lr}
 80001ba:	4b03      	ldr	r3, [pc, #12]	; (80001c8 <frame_dummy+0x10>)
 80001bc:	b11b      	cbz	r3, 80001c6 <frame_dummy+0xe>
 80001be:	4903      	ldr	r1, [pc, #12]	; (80001cc <frame_dummy+0x14>)
 80001c0:	4803      	ldr	r0, [pc, #12]	; (80001d0 <frame_dummy+0x18>)
 80001c2:	f3af 8000 	nop.w
 80001c6:	bd08      	pop	{r3, pc}
 80001c8:	00000000 	.word	0x00000000
 80001cc:	20000004 	.word	0x20000004
 80001d0:	080007f0 	.word	0x080007f0

080001d4 <MGPIO_voidSetPinMode>:
/*      4- MODE_ANALOG                                                                                 */
/* 2- Function Input       -> Copy_u8PortName ,   Copy_u8PinNum ,   Copy_u8Mod                         */                   
/* 3- Function Return      -> No Thing                                                                 */
/*******************************************************************************************************/

void MGPIO_voidSetPinMode(u8 Copy_u8PortName ,u8 Copy_u8PinNum ,u8 Copy_u8Mode  ){
 80001d4:	b480      	push	{r7}
 80001d6:	b083      	sub	sp, #12
 80001d8:	af00      	add	r7, sp, #0
 80001da:	4603      	mov	r3, r0
 80001dc:	71fb      	strb	r3, [r7, #7]
 80001de:	460b      	mov	r3, r1
 80001e0:	71bb      	strb	r3, [r7, #6]
 80001e2:	4613      	mov	r3, r2
 80001e4:	717b      	strb	r3, [r7, #5]
	
	switch(Copy_u8PortName)
 80001e6:	79fb      	ldrb	r3, [r7, #7]
 80001e8:	2b05      	cmp	r3, #5
 80001ea:	d857      	bhi.n	800029c <MGPIO_voidSetPinMode+0xc8>
 80001ec:	a201      	add	r2, pc, #4	; (adr r2, 80001f4 <MGPIO_voidSetPinMode+0x20>)
 80001ee:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80001f2:	bf00      	nop
 80001f4:	0800020d 	.word	0x0800020d
 80001f8:	08000225 	.word	0x08000225
 80001fc:	0800023d 	.word	0x0800023d
 8000200:	08000255 	.word	0x08000255
 8000204:	0800026d 	.word	0x0800026d
 8000208:	08000285 	.word	0x08000285
	{
	  case _GPIOA_PORT : MGPIOA->MODER |= (u32) ( Copy_u8Mode << ( 2U* Copy_u8PinNum )) ; break;
 800020c:	4b26      	ldr	r3, [pc, #152]	; (80002a8 <MGPIO_voidSetPinMode+0xd4>)
 800020e:	681b      	ldr	r3, [r3, #0]
 8000210:	7979      	ldrb	r1, [r7, #5]
 8000212:	79ba      	ldrb	r2, [r7, #6]
 8000214:	0052      	lsls	r2, r2, #1
 8000216:	fa01 f202 	lsl.w	r2, r1, r2
 800021a:	4611      	mov	r1, r2
 800021c:	4a22      	ldr	r2, [pc, #136]	; (80002a8 <MGPIO_voidSetPinMode+0xd4>)
 800021e:	430b      	orrs	r3, r1
 8000220:	6013      	str	r3, [r2, #0]
 8000222:	e03c      	b.n	800029e <MGPIO_voidSetPinMode+0xca>
	  case _GPIOB_PORT : MGPIOB->MODER |= (u32) ( Copy_u8Mode << ( 2U* Copy_u8PinNum )) ; break;
 8000224:	4b21      	ldr	r3, [pc, #132]	; (80002ac <MGPIO_voidSetPinMode+0xd8>)
 8000226:	681b      	ldr	r3, [r3, #0]
 8000228:	7979      	ldrb	r1, [r7, #5]
 800022a:	79ba      	ldrb	r2, [r7, #6]
 800022c:	0052      	lsls	r2, r2, #1
 800022e:	fa01 f202 	lsl.w	r2, r1, r2
 8000232:	4611      	mov	r1, r2
 8000234:	4a1d      	ldr	r2, [pc, #116]	; (80002ac <MGPIO_voidSetPinMode+0xd8>)
 8000236:	430b      	orrs	r3, r1
 8000238:	6013      	str	r3, [r2, #0]
 800023a:	e030      	b.n	800029e <MGPIO_voidSetPinMode+0xca>
	  case _GPIOC_PORT : MGPIOC->MODER |= (u32) ( Copy_u8Mode << ( 2U* Copy_u8PinNum )) ; break;
 800023c:	4b1c      	ldr	r3, [pc, #112]	; (80002b0 <MGPIO_voidSetPinMode+0xdc>)
 800023e:	681b      	ldr	r3, [r3, #0]
 8000240:	7979      	ldrb	r1, [r7, #5]
 8000242:	79ba      	ldrb	r2, [r7, #6]
 8000244:	0052      	lsls	r2, r2, #1
 8000246:	fa01 f202 	lsl.w	r2, r1, r2
 800024a:	4611      	mov	r1, r2
 800024c:	4a18      	ldr	r2, [pc, #96]	; (80002b0 <MGPIO_voidSetPinMode+0xdc>)
 800024e:	430b      	orrs	r3, r1
 8000250:	6013      	str	r3, [r2, #0]
 8000252:	e024      	b.n	800029e <MGPIO_voidSetPinMode+0xca>
	  case _GPIOD_PORT : MGPIOD->MODER |= (u32) ( Copy_u8Mode << ( 2U* Copy_u8PinNum )) ; break;
 8000254:	4b17      	ldr	r3, [pc, #92]	; (80002b4 <MGPIO_voidSetPinMode+0xe0>)
 8000256:	681b      	ldr	r3, [r3, #0]
 8000258:	7979      	ldrb	r1, [r7, #5]
 800025a:	79ba      	ldrb	r2, [r7, #6]
 800025c:	0052      	lsls	r2, r2, #1
 800025e:	fa01 f202 	lsl.w	r2, r1, r2
 8000262:	4611      	mov	r1, r2
 8000264:	4a13      	ldr	r2, [pc, #76]	; (80002b4 <MGPIO_voidSetPinMode+0xe0>)
 8000266:	430b      	orrs	r3, r1
 8000268:	6013      	str	r3, [r2, #0]
 800026a:	e018      	b.n	800029e <MGPIO_voidSetPinMode+0xca>
	  case _GPIOE_PORT : MGPIOE->MODER |= (u32) ( Copy_u8Mode << ( 2U* Copy_u8PinNum )) ; break;
 800026c:	4b12      	ldr	r3, [pc, #72]	; (80002b8 <MGPIO_voidSetPinMode+0xe4>)
 800026e:	681b      	ldr	r3, [r3, #0]
 8000270:	7979      	ldrb	r1, [r7, #5]
 8000272:	79ba      	ldrb	r2, [r7, #6]
 8000274:	0052      	lsls	r2, r2, #1
 8000276:	fa01 f202 	lsl.w	r2, r1, r2
 800027a:	4611      	mov	r1, r2
 800027c:	4a0e      	ldr	r2, [pc, #56]	; (80002b8 <MGPIO_voidSetPinMode+0xe4>)
 800027e:	430b      	orrs	r3, r1
 8000280:	6013      	str	r3, [r2, #0]
 8000282:	e00c      	b.n	800029e <MGPIO_voidSetPinMode+0xca>
	  case _GPIOH_PORT : MGPIOH->MODER |= (u32) ( Copy_u8Mode << ( 2U* Copy_u8PinNum )) ; break;
 8000284:	4b0d      	ldr	r3, [pc, #52]	; (80002bc <MGPIO_voidSetPinMode+0xe8>)
 8000286:	681b      	ldr	r3, [r3, #0]
 8000288:	7979      	ldrb	r1, [r7, #5]
 800028a:	79ba      	ldrb	r2, [r7, #6]
 800028c:	0052      	lsls	r2, r2, #1
 800028e:	fa01 f202 	lsl.w	r2, r1, r2
 8000292:	4611      	mov	r1, r2
 8000294:	4a09      	ldr	r2, [pc, #36]	; (80002bc <MGPIO_voidSetPinMode+0xe8>)
 8000296:	430b      	orrs	r3, r1
 8000298:	6013      	str	r3, [r2, #0]
 800029a:	e000      	b.n	800029e <MGPIO_voidSetPinMode+0xca>
	  default : /*ERROR*/ break ;
 800029c:	bf00      	nop
    }
}
 800029e:	bf00      	nop
 80002a0:	370c      	adds	r7, #12
 80002a2:	46bd      	mov	sp, r7
 80002a4:	bc80      	pop	{r7}
 80002a6:	4770      	bx	lr
 80002a8:	40020000 	.word	0x40020000
 80002ac:	40020400 	.word	0x40020400
 80002b0:	40020800 	.word	0x40020800
 80002b4:	40020c00 	.word	0x40020c00
 80002b8:	40021000 	.word	0x40021000
 80002bc:	40021c00 	.word	0x40021c00

080002c0 <MGPIO_voidSetPinOutPutType>:
/*       - OUTPUT_TYPE_OPEN_DRAIN	                                                                   */
/* 2- Function Input       -> Copy_u8PortName ,   Copy_u8PinNum ,   Copy_u8OutPutType                  */                   
/* 3- Function Return      -> No Thing                                                                 */
/*******************************************************************************************************/

void MGPIO_voidSetPinOutPutType(u8 Copy_u8PortName ,u8 Copy_u8PinNum ,u8 Copy_u8OutPutType  ){
 80002c0:	b480      	push	{r7}
 80002c2:	b083      	sub	sp, #12
 80002c4:	af00      	add	r7, sp, #0
 80002c6:	4603      	mov	r3, r0
 80002c8:	71fb      	strb	r3, [r7, #7]
 80002ca:	460b      	mov	r3, r1
 80002cc:	71bb      	strb	r3, [r7, #6]
 80002ce:	4613      	mov	r3, r2
 80002d0:	717b      	strb	r3, [r7, #5]
	
	switch(Copy_u8PortName)
 80002d2:	79fb      	ldrb	r3, [r7, #7]
 80002d4:	2b05      	cmp	r3, #5
 80002d6:	d851      	bhi.n	800037c <MGPIO_voidSetPinOutPutType+0xbc>
 80002d8:	a201      	add	r2, pc, #4	; (adr r2, 80002e0 <MGPIO_voidSetPinOutPutType+0x20>)
 80002da:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80002de:	bf00      	nop
 80002e0:	080002f9 	.word	0x080002f9
 80002e4:	0800030f 	.word	0x0800030f
 80002e8:	08000325 	.word	0x08000325
 80002ec:	0800033b 	.word	0x0800033b
 80002f0:	08000351 	.word	0x08000351
 80002f4:	08000367 	.word	0x08000367
	{
	  case _GPIOA_PORT : MGPIOA->OTYPER |= (u32) ( Copy_u8OutPutType << ( Copy_u8PinNum )) ; break;
 80002f8:	4b23      	ldr	r3, [pc, #140]	; (8000388 <MGPIO_voidSetPinOutPutType+0xc8>)
 80002fa:	685b      	ldr	r3, [r3, #4]
 80002fc:	7979      	ldrb	r1, [r7, #5]
 80002fe:	79ba      	ldrb	r2, [r7, #6]
 8000300:	fa01 f202 	lsl.w	r2, r1, r2
 8000304:	4611      	mov	r1, r2
 8000306:	4a20      	ldr	r2, [pc, #128]	; (8000388 <MGPIO_voidSetPinOutPutType+0xc8>)
 8000308:	430b      	orrs	r3, r1
 800030a:	6053      	str	r3, [r2, #4]
 800030c:	e037      	b.n	800037e <MGPIO_voidSetPinOutPutType+0xbe>
	  case _GPIOB_PORT : MGPIOB->OTYPER |= (u32) ( Copy_u8OutPutType << ( Copy_u8PinNum )) ; break;
 800030e:	4b1f      	ldr	r3, [pc, #124]	; (800038c <MGPIO_voidSetPinOutPutType+0xcc>)
 8000310:	685b      	ldr	r3, [r3, #4]
 8000312:	7979      	ldrb	r1, [r7, #5]
 8000314:	79ba      	ldrb	r2, [r7, #6]
 8000316:	fa01 f202 	lsl.w	r2, r1, r2
 800031a:	4611      	mov	r1, r2
 800031c:	4a1b      	ldr	r2, [pc, #108]	; (800038c <MGPIO_voidSetPinOutPutType+0xcc>)
 800031e:	430b      	orrs	r3, r1
 8000320:	6053      	str	r3, [r2, #4]
 8000322:	e02c      	b.n	800037e <MGPIO_voidSetPinOutPutType+0xbe>
	  case _GPIOC_PORT : MGPIOC->OTYPER |= (u32) ( Copy_u8OutPutType << ( Copy_u8PinNum )) ; break;
 8000324:	4b1a      	ldr	r3, [pc, #104]	; (8000390 <MGPIO_voidSetPinOutPutType+0xd0>)
 8000326:	685b      	ldr	r3, [r3, #4]
 8000328:	7979      	ldrb	r1, [r7, #5]
 800032a:	79ba      	ldrb	r2, [r7, #6]
 800032c:	fa01 f202 	lsl.w	r2, r1, r2
 8000330:	4611      	mov	r1, r2
 8000332:	4a17      	ldr	r2, [pc, #92]	; (8000390 <MGPIO_voidSetPinOutPutType+0xd0>)
 8000334:	430b      	orrs	r3, r1
 8000336:	6053      	str	r3, [r2, #4]
 8000338:	e021      	b.n	800037e <MGPIO_voidSetPinOutPutType+0xbe>
	  case _GPIOD_PORT : MGPIOD->OTYPER |= (u32) ( Copy_u8OutPutType << ( Copy_u8PinNum )) ; break;
 800033a:	4b16      	ldr	r3, [pc, #88]	; (8000394 <MGPIO_voidSetPinOutPutType+0xd4>)
 800033c:	685b      	ldr	r3, [r3, #4]
 800033e:	7979      	ldrb	r1, [r7, #5]
 8000340:	79ba      	ldrb	r2, [r7, #6]
 8000342:	fa01 f202 	lsl.w	r2, r1, r2
 8000346:	4611      	mov	r1, r2
 8000348:	4a12      	ldr	r2, [pc, #72]	; (8000394 <MGPIO_voidSetPinOutPutType+0xd4>)
 800034a:	430b      	orrs	r3, r1
 800034c:	6053      	str	r3, [r2, #4]
 800034e:	e016      	b.n	800037e <MGPIO_voidSetPinOutPutType+0xbe>
	  case _GPIOE_PORT : MGPIOE->OTYPER |= (u32) ( Copy_u8OutPutType << ( Copy_u8PinNum )) ; break;
 8000350:	4b11      	ldr	r3, [pc, #68]	; (8000398 <MGPIO_voidSetPinOutPutType+0xd8>)
 8000352:	685b      	ldr	r3, [r3, #4]
 8000354:	7979      	ldrb	r1, [r7, #5]
 8000356:	79ba      	ldrb	r2, [r7, #6]
 8000358:	fa01 f202 	lsl.w	r2, r1, r2
 800035c:	4611      	mov	r1, r2
 800035e:	4a0e      	ldr	r2, [pc, #56]	; (8000398 <MGPIO_voidSetPinOutPutType+0xd8>)
 8000360:	430b      	orrs	r3, r1
 8000362:	6053      	str	r3, [r2, #4]
 8000364:	e00b      	b.n	800037e <MGPIO_voidSetPinOutPutType+0xbe>
	  case _GPIOH_PORT : MGPIOH->OTYPER |= (u32) ( Copy_u8OutPutType << ( Copy_u8PinNum )) ; break;
 8000366:	4b0d      	ldr	r3, [pc, #52]	; (800039c <MGPIO_voidSetPinOutPutType+0xdc>)
 8000368:	685b      	ldr	r3, [r3, #4]
 800036a:	7979      	ldrb	r1, [r7, #5]
 800036c:	79ba      	ldrb	r2, [r7, #6]
 800036e:	fa01 f202 	lsl.w	r2, r1, r2
 8000372:	4611      	mov	r1, r2
 8000374:	4a09      	ldr	r2, [pc, #36]	; (800039c <MGPIO_voidSetPinOutPutType+0xdc>)
 8000376:	430b      	orrs	r3, r1
 8000378:	6053      	str	r3, [r2, #4]
 800037a:	e000      	b.n	800037e <MGPIO_voidSetPinOutPutType+0xbe>
	  default : /*ERROR*/ break ;
 800037c:	bf00      	nop
     }
	
}
 800037e:	bf00      	nop
 8000380:	370c      	adds	r7, #12
 8000382:	46bd      	mov	sp, r7
 8000384:	bc80      	pop	{r7}
 8000386:	4770      	bx	lr
 8000388:	40020000 	.word	0x40020000
 800038c:	40020400 	.word	0x40020400
 8000390:	40020800 	.word	0x40020800
 8000394:	40020c00 	.word	0x40020c00
 8000398:	40021000 	.word	0x40021000
 800039c:	40021c00 	.word	0x40021c00

080003a0 <MGPIO_voidSetPinOutSpeed>:
/*                             - OUTPUT_SPEED_VERY_HIGH	                                               */
/* 2- Function Input       -> Copy_u8PortName ,   Copy_u8PinNum ,   Copy_u8OutSpeed                    */                   
/* 3- Function Return      -> No Thing                                                                 */
/*******************************************************************************************************/

void MGPIO_voidSetPinOutSpeed(u8 Copy_u8PortName ,u32 Copy_u8PinNum ,u32 Copy_u8OutSpeed ){
 80003a0:	b480      	push	{r7}
 80003a2:	b085      	sub	sp, #20
 80003a4:	af00      	add	r7, sp, #0
 80003a6:	4603      	mov	r3, r0
 80003a8:	60b9      	str	r1, [r7, #8]
 80003aa:	607a      	str	r2, [r7, #4]
 80003ac:	73fb      	strb	r3, [r7, #15]
	
	switch(Copy_u8PortName)
 80003ae:	7bfb      	ldrb	r3, [r7, #15]
 80003b0:	2b05      	cmp	r3, #5
 80003b2:	d851      	bhi.n	8000458 <MGPIO_voidSetPinOutSpeed+0xb8>
 80003b4:	a201      	add	r2, pc, #4	; (adr r2, 80003bc <MGPIO_voidSetPinOutSpeed+0x1c>)
 80003b6:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80003ba:	bf00      	nop
 80003bc:	080003d5 	.word	0x080003d5
 80003c0:	080003eb 	.word	0x080003eb
 80003c4:	08000401 	.word	0x08000401
 80003c8:	08000417 	.word	0x08000417
 80003cc:	0800042d 	.word	0x0800042d
 80003d0:	08000443 	.word	0x08000443
	{
	  case _GPIOA_PORT : MGPIOA->OSPEEDR |= (u32) ( Copy_u8OutSpeed << ( 2U* Copy_u8PinNum )) ; break;
 80003d4:	4b23      	ldr	r3, [pc, #140]	; (8000464 <MGPIO_voidSetPinOutSpeed+0xc4>)
 80003d6:	689a      	ldr	r2, [r3, #8]
 80003d8:	68bb      	ldr	r3, [r7, #8]
 80003da:	005b      	lsls	r3, r3, #1
 80003dc:	6879      	ldr	r1, [r7, #4]
 80003de:	fa01 f303 	lsl.w	r3, r1, r3
 80003e2:	4920      	ldr	r1, [pc, #128]	; (8000464 <MGPIO_voidSetPinOutSpeed+0xc4>)
 80003e4:	4313      	orrs	r3, r2
 80003e6:	608b      	str	r3, [r1, #8]
 80003e8:	e037      	b.n	800045a <MGPIO_voidSetPinOutSpeed+0xba>
	  case _GPIOB_PORT : MGPIOB->OSPEEDR |= (u32) ( Copy_u8OutSpeed << ( 2U* Copy_u8PinNum )) ; break;
 80003ea:	4b1f      	ldr	r3, [pc, #124]	; (8000468 <MGPIO_voidSetPinOutSpeed+0xc8>)
 80003ec:	689a      	ldr	r2, [r3, #8]
 80003ee:	68bb      	ldr	r3, [r7, #8]
 80003f0:	005b      	lsls	r3, r3, #1
 80003f2:	6879      	ldr	r1, [r7, #4]
 80003f4:	fa01 f303 	lsl.w	r3, r1, r3
 80003f8:	491b      	ldr	r1, [pc, #108]	; (8000468 <MGPIO_voidSetPinOutSpeed+0xc8>)
 80003fa:	4313      	orrs	r3, r2
 80003fc:	608b      	str	r3, [r1, #8]
 80003fe:	e02c      	b.n	800045a <MGPIO_voidSetPinOutSpeed+0xba>
	  case _GPIOC_PORT : MGPIOC->OSPEEDR |= (u32) ( Copy_u8OutSpeed << ( 2U* Copy_u8PinNum )) ; break;
 8000400:	4b1a      	ldr	r3, [pc, #104]	; (800046c <MGPIO_voidSetPinOutSpeed+0xcc>)
 8000402:	689a      	ldr	r2, [r3, #8]
 8000404:	68bb      	ldr	r3, [r7, #8]
 8000406:	005b      	lsls	r3, r3, #1
 8000408:	6879      	ldr	r1, [r7, #4]
 800040a:	fa01 f303 	lsl.w	r3, r1, r3
 800040e:	4917      	ldr	r1, [pc, #92]	; (800046c <MGPIO_voidSetPinOutSpeed+0xcc>)
 8000410:	4313      	orrs	r3, r2
 8000412:	608b      	str	r3, [r1, #8]
 8000414:	e021      	b.n	800045a <MGPIO_voidSetPinOutSpeed+0xba>
	  case _GPIOD_PORT : MGPIOD->OSPEEDR |= (u32) ( Copy_u8OutSpeed << ( 2U* Copy_u8PinNum )) ; break;
 8000416:	4b16      	ldr	r3, [pc, #88]	; (8000470 <MGPIO_voidSetPinOutSpeed+0xd0>)
 8000418:	689a      	ldr	r2, [r3, #8]
 800041a:	68bb      	ldr	r3, [r7, #8]
 800041c:	005b      	lsls	r3, r3, #1
 800041e:	6879      	ldr	r1, [r7, #4]
 8000420:	fa01 f303 	lsl.w	r3, r1, r3
 8000424:	4912      	ldr	r1, [pc, #72]	; (8000470 <MGPIO_voidSetPinOutSpeed+0xd0>)
 8000426:	4313      	orrs	r3, r2
 8000428:	608b      	str	r3, [r1, #8]
 800042a:	e016      	b.n	800045a <MGPIO_voidSetPinOutSpeed+0xba>
	  case _GPIOE_PORT : MGPIOE->OSPEEDR |= (u32) ( Copy_u8OutSpeed << ( 2U* Copy_u8PinNum )) ; break;
 800042c:	4b11      	ldr	r3, [pc, #68]	; (8000474 <MGPIO_voidSetPinOutSpeed+0xd4>)
 800042e:	689a      	ldr	r2, [r3, #8]
 8000430:	68bb      	ldr	r3, [r7, #8]
 8000432:	005b      	lsls	r3, r3, #1
 8000434:	6879      	ldr	r1, [r7, #4]
 8000436:	fa01 f303 	lsl.w	r3, r1, r3
 800043a:	490e      	ldr	r1, [pc, #56]	; (8000474 <MGPIO_voidSetPinOutSpeed+0xd4>)
 800043c:	4313      	orrs	r3, r2
 800043e:	608b      	str	r3, [r1, #8]
 8000440:	e00b      	b.n	800045a <MGPIO_voidSetPinOutSpeed+0xba>
	  case _GPIOH_PORT : MGPIOH->OSPEEDR |= (u32) ( Copy_u8OutSpeed << ( 2U* Copy_u8PinNum )) ; break;
 8000442:	4b0d      	ldr	r3, [pc, #52]	; (8000478 <MGPIO_voidSetPinOutSpeed+0xd8>)
 8000444:	689a      	ldr	r2, [r3, #8]
 8000446:	68bb      	ldr	r3, [r7, #8]
 8000448:	005b      	lsls	r3, r3, #1
 800044a:	6879      	ldr	r1, [r7, #4]
 800044c:	fa01 f303 	lsl.w	r3, r1, r3
 8000450:	4909      	ldr	r1, [pc, #36]	; (8000478 <MGPIO_voidSetPinOutSpeed+0xd8>)
 8000452:	4313      	orrs	r3, r2
 8000454:	608b      	str	r3, [r1, #8]
 8000456:	e000      	b.n	800045a <MGPIO_voidSetPinOutSpeed+0xba>
	  default : /*ERROR*/ break ;
 8000458:	bf00      	nop
	}
}
 800045a:	bf00      	nop
 800045c:	3714      	adds	r7, #20
 800045e:	46bd      	mov	sp, r7
 8000460:	bc80      	pop	{r7}
 8000462:	4770      	bx	lr
 8000464:	40020000 	.word	0x40020000
 8000468:	40020400 	.word	0x40020400
 800046c:	40020800 	.word	0x40020800
 8000470:	40020c00 	.word	0x40020c00
 8000474:	40021000 	.word	0x40021000
 8000478:	40021c00 	.word	0x40021c00

0800047c <MGPIO_voidWriteData>:
/* 2- Function Input       -> Copy_u8PortName ,   Copy_u8PinNum ,   Copy_u8State                       */                   
/* 3- Function Return      -> No Thing                                                                 */
/*******************************************************************************************************/

void MGPIO_voidWriteData(u8 Copy_u8PortName ,u8 Copy_u8PinNum ,u8 Copy_u8State)
{
 800047c:	b480      	push	{r7}
 800047e:	b083      	sub	sp, #12
 8000480:	af00      	add	r7, sp, #0
 8000482:	4603      	mov	r3, r0
 8000484:	71fb      	strb	r3, [r7, #7]
 8000486:	460b      	mov	r3, r1
 8000488:	71bb      	strb	r3, [r7, #6]
 800048a:	4613      	mov	r3, r2
 800048c:	717b      	strb	r3, [r7, #5]
	if(Copy_u8State==HIGH)
 800048e:	797b      	ldrb	r3, [r7, #5]
 8000490:	2b01      	cmp	r3, #1
 8000492:	d14f      	bne.n	8000534 <MGPIO_voidWriteData+0xb8>
	{
		switch(Copy_u8PortName)
 8000494:	79fb      	ldrb	r3, [r7, #7]
 8000496:	2b05      	cmp	r3, #5
 8000498:	f200 80a0 	bhi.w	80005dc <MGPIO_voidWriteData+0x160>
 800049c:	a201      	add	r2, pc, #4	; (adr r2, 80004a4 <MGPIO_voidWriteData+0x28>)
 800049e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80004a2:	bf00      	nop
 80004a4:	080004bd 	.word	0x080004bd
 80004a8:	080004d1 	.word	0x080004d1
 80004ac:	080004e5 	.word	0x080004e5
 80004b0:	080004f9 	.word	0x080004f9
 80004b4:	0800050d 	.word	0x0800050d
 80004b8:	08000521 	.word	0x08000521
		{
		case _GPIOA_PORT :  SET_BIT(MGPIOA ->ODR,Copy_u8PinNum); break;
 80004bc:	4b4b      	ldr	r3, [pc, #300]	; (80005ec <MGPIO_voidWriteData+0x170>)
 80004be:	695a      	ldr	r2, [r3, #20]
 80004c0:	79bb      	ldrb	r3, [r7, #6]
 80004c2:	2101      	movs	r1, #1
 80004c4:	fa01 f303 	lsl.w	r3, r1, r3
 80004c8:	4948      	ldr	r1, [pc, #288]	; (80005ec <MGPIO_voidWriteData+0x170>)
 80004ca:	4313      	orrs	r3, r2
 80004cc:	614b      	str	r3, [r1, #20]
 80004ce:	e088      	b.n	80005e2 <MGPIO_voidWriteData+0x166>
		
		case _GPIOB_PORT :  SET_BIT(MGPIOB ->ODR,Copy_u8PinNum); break;
 80004d0:	4b47      	ldr	r3, [pc, #284]	; (80005f0 <MGPIO_voidWriteData+0x174>)
 80004d2:	695a      	ldr	r2, [r3, #20]
 80004d4:	79bb      	ldrb	r3, [r7, #6]
 80004d6:	2101      	movs	r1, #1
 80004d8:	fa01 f303 	lsl.w	r3, r1, r3
 80004dc:	4944      	ldr	r1, [pc, #272]	; (80005f0 <MGPIO_voidWriteData+0x174>)
 80004de:	4313      	orrs	r3, r2
 80004e0:	614b      	str	r3, [r1, #20]
 80004e2:	e07e      	b.n	80005e2 <MGPIO_voidWriteData+0x166>
		
		case _GPIOC_PORT :  SET_BIT(MGPIOC ->ODR,Copy_u8PinNum); break;
 80004e4:	4b43      	ldr	r3, [pc, #268]	; (80005f4 <MGPIO_voidWriteData+0x178>)
 80004e6:	695a      	ldr	r2, [r3, #20]
 80004e8:	79bb      	ldrb	r3, [r7, #6]
 80004ea:	2101      	movs	r1, #1
 80004ec:	fa01 f303 	lsl.w	r3, r1, r3
 80004f0:	4940      	ldr	r1, [pc, #256]	; (80005f4 <MGPIO_voidWriteData+0x178>)
 80004f2:	4313      	orrs	r3, r2
 80004f4:	614b      	str	r3, [r1, #20]
 80004f6:	e074      	b.n	80005e2 <MGPIO_voidWriteData+0x166>
		
		case _GPIOD_PORT :  SET_BIT(MGPIOD ->ODR,Copy_u8PinNum); break;
 80004f8:	4b3f      	ldr	r3, [pc, #252]	; (80005f8 <MGPIO_voidWriteData+0x17c>)
 80004fa:	695a      	ldr	r2, [r3, #20]
 80004fc:	79bb      	ldrb	r3, [r7, #6]
 80004fe:	2101      	movs	r1, #1
 8000500:	fa01 f303 	lsl.w	r3, r1, r3
 8000504:	493c      	ldr	r1, [pc, #240]	; (80005f8 <MGPIO_voidWriteData+0x17c>)
 8000506:	4313      	orrs	r3, r2
 8000508:	614b      	str	r3, [r1, #20]
 800050a:	e06a      	b.n	80005e2 <MGPIO_voidWriteData+0x166>
		
		case _GPIOE_PORT :  SET_BIT(MGPIOE ->ODR,Copy_u8PinNum); break;
 800050c:	4b3b      	ldr	r3, [pc, #236]	; (80005fc <MGPIO_voidWriteData+0x180>)
 800050e:	695a      	ldr	r2, [r3, #20]
 8000510:	79bb      	ldrb	r3, [r7, #6]
 8000512:	2101      	movs	r1, #1
 8000514:	fa01 f303 	lsl.w	r3, r1, r3
 8000518:	4938      	ldr	r1, [pc, #224]	; (80005fc <MGPIO_voidWriteData+0x180>)
 800051a:	4313      	orrs	r3, r2
 800051c:	614b      	str	r3, [r1, #20]
 800051e:	e060      	b.n	80005e2 <MGPIO_voidWriteData+0x166>
		
		case _GPIOH_PORT :  SET_BIT(MGPIOH ->ODR,Copy_u8PinNum); break;
 8000520:	4b37      	ldr	r3, [pc, #220]	; (8000600 <MGPIO_voidWriteData+0x184>)
 8000522:	695a      	ldr	r2, [r3, #20]
 8000524:	79bb      	ldrb	r3, [r7, #6]
 8000526:	2101      	movs	r1, #1
 8000528:	fa01 f303 	lsl.w	r3, r1, r3
 800052c:	4934      	ldr	r1, [pc, #208]	; (8000600 <MGPIO_voidWriteData+0x184>)
 800052e:	4313      	orrs	r3, r2
 8000530:	614b      	str	r3, [r1, #20]
 8000532:	e056      	b.n	80005e2 <MGPIO_voidWriteData+0x166>
		default : /*ERROR*/ break ;
		}
		
	}
	else{
		switch(Copy_u8PortName)
 8000534:	79fb      	ldrb	r3, [r7, #7]
 8000536:	2b05      	cmp	r3, #5
 8000538:	d852      	bhi.n	80005e0 <MGPIO_voidWriteData+0x164>
 800053a:	a201      	add	r2, pc, #4	; (adr r2, 8000540 <MGPIO_voidWriteData+0xc4>)
 800053c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000540:	08000559 	.word	0x08000559
 8000544:	0800056f 	.word	0x0800056f
 8000548:	08000585 	.word	0x08000585
 800054c:	0800059b 	.word	0x0800059b
 8000550:	080005b1 	.word	0x080005b1
 8000554:	080005c7 	.word	0x080005c7
		{
		case _GPIOA_PORT :  CLR_BIT(MGPIOA ->ODR,Copy_u8PinNum); break;
 8000558:	4b24      	ldr	r3, [pc, #144]	; (80005ec <MGPIO_voidWriteData+0x170>)
 800055a:	695a      	ldr	r2, [r3, #20]
 800055c:	79bb      	ldrb	r3, [r7, #6]
 800055e:	2101      	movs	r1, #1
 8000560:	fa01 f303 	lsl.w	r3, r1, r3
 8000564:	43db      	mvns	r3, r3
 8000566:	4921      	ldr	r1, [pc, #132]	; (80005ec <MGPIO_voidWriteData+0x170>)
 8000568:	4013      	ands	r3, r2
 800056a:	614b      	str	r3, [r1, #20]
 800056c:	e039      	b.n	80005e2 <MGPIO_voidWriteData+0x166>
		
		case _GPIOB_PORT :  CLR_BIT(MGPIOB ->ODR,Copy_u8PinNum); break;
 800056e:	4b20      	ldr	r3, [pc, #128]	; (80005f0 <MGPIO_voidWriteData+0x174>)
 8000570:	695a      	ldr	r2, [r3, #20]
 8000572:	79bb      	ldrb	r3, [r7, #6]
 8000574:	2101      	movs	r1, #1
 8000576:	fa01 f303 	lsl.w	r3, r1, r3
 800057a:	43db      	mvns	r3, r3
 800057c:	491c      	ldr	r1, [pc, #112]	; (80005f0 <MGPIO_voidWriteData+0x174>)
 800057e:	4013      	ands	r3, r2
 8000580:	614b      	str	r3, [r1, #20]
 8000582:	e02e      	b.n	80005e2 <MGPIO_voidWriteData+0x166>
		
		case _GPIOC_PORT :  CLR_BIT(MGPIOC ->ODR,Copy_u8PinNum); break;
 8000584:	4b1b      	ldr	r3, [pc, #108]	; (80005f4 <MGPIO_voidWriteData+0x178>)
 8000586:	695a      	ldr	r2, [r3, #20]
 8000588:	79bb      	ldrb	r3, [r7, #6]
 800058a:	2101      	movs	r1, #1
 800058c:	fa01 f303 	lsl.w	r3, r1, r3
 8000590:	43db      	mvns	r3, r3
 8000592:	4918      	ldr	r1, [pc, #96]	; (80005f4 <MGPIO_voidWriteData+0x178>)
 8000594:	4013      	ands	r3, r2
 8000596:	614b      	str	r3, [r1, #20]
 8000598:	e023      	b.n	80005e2 <MGPIO_voidWriteData+0x166>
		
		case _GPIOD_PORT :  CLR_BIT(MGPIOD ->ODR,Copy_u8PinNum); break;
 800059a:	4b17      	ldr	r3, [pc, #92]	; (80005f8 <MGPIO_voidWriteData+0x17c>)
 800059c:	695a      	ldr	r2, [r3, #20]
 800059e:	79bb      	ldrb	r3, [r7, #6]
 80005a0:	2101      	movs	r1, #1
 80005a2:	fa01 f303 	lsl.w	r3, r1, r3
 80005a6:	43db      	mvns	r3, r3
 80005a8:	4913      	ldr	r1, [pc, #76]	; (80005f8 <MGPIO_voidWriteData+0x17c>)
 80005aa:	4013      	ands	r3, r2
 80005ac:	614b      	str	r3, [r1, #20]
 80005ae:	e018      	b.n	80005e2 <MGPIO_voidWriteData+0x166>
		
		case _GPIOE_PORT :  CLR_BIT(MGPIOE ->ODR,Copy_u8PinNum); break;
 80005b0:	4b12      	ldr	r3, [pc, #72]	; (80005fc <MGPIO_voidWriteData+0x180>)
 80005b2:	695a      	ldr	r2, [r3, #20]
 80005b4:	79bb      	ldrb	r3, [r7, #6]
 80005b6:	2101      	movs	r1, #1
 80005b8:	fa01 f303 	lsl.w	r3, r1, r3
 80005bc:	43db      	mvns	r3, r3
 80005be:	490f      	ldr	r1, [pc, #60]	; (80005fc <MGPIO_voidWriteData+0x180>)
 80005c0:	4013      	ands	r3, r2
 80005c2:	614b      	str	r3, [r1, #20]
 80005c4:	e00d      	b.n	80005e2 <MGPIO_voidWriteData+0x166>
		
		case _GPIOH_PORT :  CLR_BIT(MGPIOH ->ODR,Copy_u8PinNum); break;
 80005c6:	4b0e      	ldr	r3, [pc, #56]	; (8000600 <MGPIO_voidWriteData+0x184>)
 80005c8:	695a      	ldr	r2, [r3, #20]
 80005ca:	79bb      	ldrb	r3, [r7, #6]
 80005cc:	2101      	movs	r1, #1
 80005ce:	fa01 f303 	lsl.w	r3, r1, r3
 80005d2:	43db      	mvns	r3, r3
 80005d4:	490a      	ldr	r1, [pc, #40]	; (8000600 <MGPIO_voidWriteData+0x184>)
 80005d6:	4013      	ands	r3, r2
 80005d8:	614b      	str	r3, [r1, #20]
 80005da:	e002      	b.n	80005e2 <MGPIO_voidWriteData+0x166>
		default : /*ERROR*/ break ;
 80005dc:	bf00      	nop
 80005de:	e000      	b.n	80005e2 <MGPIO_voidWriteData+0x166>
		
		default : /*ERROR*/ break ;
 80005e0:	bf00      	nop
		}
	}
}
 80005e2:	bf00      	nop
 80005e4:	370c      	adds	r7, #12
 80005e6:	46bd      	mov	sp, r7
 80005e8:	bc80      	pop	{r7}
 80005ea:	4770      	bx	lr
 80005ec:	40020000 	.word	0x40020000
 80005f0:	40020400 	.word	0x40020400
 80005f4:	40020800 	.word	0x40020800
 80005f8:	40020c00 	.word	0x40020c00
 80005fc:	40021000 	.word	0x40021000
 8000600:	40021c00 	.word	0x40021c00

08000604 <MRCC_voidEnablePeripheralClock>:
/*   - Copy_u8PerName :  The Order Of Prepheral On The Selected Reg                                    */                      
/* 3- Function Return      -> No Thing                                                                 */
/*******************************************************************************************************/

void MRCC_voidEnablePeripheralClock(BusName_t BusName , u8 Copy_u8PerNum )
{
 8000604:	b480      	push	{r7}
 8000606:	b083      	sub	sp, #12
 8000608:	af00      	add	r7, sp, #0
 800060a:	4603      	mov	r3, r0
 800060c:	460a      	mov	r2, r1
 800060e:	71fb      	strb	r3, [r7, #7]
 8000610:	4613      	mov	r3, r2
 8000612:	71bb      	strb	r3, [r7, #6]
	
	switch(BusName)
 8000614:	79fb      	ldrb	r3, [r7, #7]
 8000616:	2b03      	cmp	r3, #3
 8000618:	d832      	bhi.n	8000680 <MRCC_voidEnablePeripheralClock+0x7c>
 800061a:	a201      	add	r2, pc, #4	; (adr r2, 8000620 <MRCC_voidEnablePeripheralClock+0x1c>)
 800061c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000620:	08000631 	.word	0x08000631
 8000624:	08000645 	.word	0x08000645
 8000628:	08000659 	.word	0x08000659
 800062c:	0800066d 	.word	0x0800066d
	{
		case AHB1_BUS:  SET_BIT(RCC_AHB1ENR,Copy_u8PerNum );         break ;
 8000630:	4b16      	ldr	r3, [pc, #88]	; (800068c <MRCC_voidEnablePeripheralClock+0x88>)
 8000632:	681a      	ldr	r2, [r3, #0]
 8000634:	79bb      	ldrb	r3, [r7, #6]
 8000636:	2101      	movs	r1, #1
 8000638:	fa01 f303 	lsl.w	r3, r1, r3
 800063c:	4913      	ldr	r1, [pc, #76]	; (800068c <MRCC_voidEnablePeripheralClock+0x88>)
 800063e:	4313      	orrs	r3, r2
 8000640:	600b      	str	r3, [r1, #0]
 8000642:	e01e      	b.n	8000682 <MRCC_voidEnablePeripheralClock+0x7e>
		case AHB2_BUS:  SET_BIT(RCC_AHB2ENR,Copy_u8PerNum );         break ;
 8000644:	4b12      	ldr	r3, [pc, #72]	; (8000690 <MRCC_voidEnablePeripheralClock+0x8c>)
 8000646:	681a      	ldr	r2, [r3, #0]
 8000648:	79bb      	ldrb	r3, [r7, #6]
 800064a:	2101      	movs	r1, #1
 800064c:	fa01 f303 	lsl.w	r3, r1, r3
 8000650:	490f      	ldr	r1, [pc, #60]	; (8000690 <MRCC_voidEnablePeripheralClock+0x8c>)
 8000652:	4313      	orrs	r3, r2
 8000654:	600b      	str	r3, [r1, #0]
 8000656:	e014      	b.n	8000682 <MRCC_voidEnablePeripheralClock+0x7e>
		case APB1_BUS:  SET_BIT(RCC_APB1ENR,Copy_u8PerNum );         break ;
 8000658:	4b0e      	ldr	r3, [pc, #56]	; (8000694 <MRCC_voidEnablePeripheralClock+0x90>)
 800065a:	681a      	ldr	r2, [r3, #0]
 800065c:	79bb      	ldrb	r3, [r7, #6]
 800065e:	2101      	movs	r1, #1
 8000660:	fa01 f303 	lsl.w	r3, r1, r3
 8000664:	490b      	ldr	r1, [pc, #44]	; (8000694 <MRCC_voidEnablePeripheralClock+0x90>)
 8000666:	4313      	orrs	r3, r2
 8000668:	600b      	str	r3, [r1, #0]
 800066a:	e00a      	b.n	8000682 <MRCC_voidEnablePeripheralClock+0x7e>
		case APB2_BUS:  SET_BIT(RCC_APB2ENR,Copy_u8PerNum );         break ;
 800066c:	4b0a      	ldr	r3, [pc, #40]	; (8000698 <MRCC_voidEnablePeripheralClock+0x94>)
 800066e:	681a      	ldr	r2, [r3, #0]
 8000670:	79bb      	ldrb	r3, [r7, #6]
 8000672:	2101      	movs	r1, #1
 8000674:	fa01 f303 	lsl.w	r3, r1, r3
 8000678:	4907      	ldr	r1, [pc, #28]	; (8000698 <MRCC_voidEnablePeripheralClock+0x94>)
 800067a:	4313      	orrs	r3, r2
 800067c:	600b      	str	r3, [r1, #0]
 800067e:	e000      	b.n	8000682 <MRCC_voidEnablePeripheralClock+0x7e>
		default :     /*   ERROR   */          break ;
 8000680:	bf00      	nop
		
	}
}
 8000682:	bf00      	nop
 8000684:	370c      	adds	r7, #12
 8000686:	46bd      	mov	sp, r7
 8000688:	bc80      	pop	{r7}
 800068a:	4770      	bx	lr
 800068c:	40023830 	.word	0x40023830
 8000690:	40023834 	.word	0x40023834
 8000694:	40023840 	.word	0x40023840
 8000698:	40023844 	.word	0x40023844

0800069c <MRCC_voidInitSystemClk>:
/*    - HSESrc  :HSE_Crystal ,HSE_RC                                                                   */
/* 2- Function Input       -> No Thing                                                                 */
/* 3- Function Return      -> No Thing                                                                 */
/*******************************************************************************************************/
void MRCC_voidInitSystemClk(void)
{
 800069c:	b480      	push	{r7}
 800069e:	af00      	add	r7, sp, #0
	/********** HSI **********/
#if CLKSRC == HSI 
	/* 1- EN HSI */
	SET_BIT(MRCC->CR , 0U);
 80006a0:	4b0a      	ldr	r3, [pc, #40]	; (80006cc <MRCC_voidInitSystemClk+0x30>)
 80006a2:	681b      	ldr	r3, [r3, #0]
 80006a4:	4a09      	ldr	r2, [pc, #36]	; (80006cc <MRCC_voidInitSystemClk+0x30>)
 80006a6:	f043 0301 	orr.w	r3, r3, #1
 80006aa:	6013      	str	r3, [r2, #0]
	/* 2- CLK SYS --> HSI */
	CLR_BIT(MRCC->CFGR, 0U);
 80006ac:	4b07      	ldr	r3, [pc, #28]	; (80006cc <MRCC_voidInitSystemClk+0x30>)
 80006ae:	689b      	ldr	r3, [r3, #8]
 80006b0:	4a06      	ldr	r2, [pc, #24]	; (80006cc <MRCC_voidInitSystemClk+0x30>)
 80006b2:	f023 0301 	bic.w	r3, r3, #1
 80006b6:	6093      	str	r3, [r2, #8]
	CLR_BIT(MRCC->CFGR, 1U);
 80006b8:	4b04      	ldr	r3, [pc, #16]	; (80006cc <MRCC_voidInitSystemClk+0x30>)
 80006ba:	689b      	ldr	r3, [r3, #8]
 80006bc:	4a03      	ldr	r2, [pc, #12]	; (80006cc <MRCC_voidInitSystemClk+0x30>)
 80006be:	f023 0302 	bic.w	r3, r3, #2
 80006c2:	6093      	str	r3, [r2, #8]
/****************************************************/

#else 
/* Error*/
#endif // The End Of Big IF	
}
 80006c4:	bf00      	nop
 80006c6:	46bd      	mov	sp, r7
 80006c8:	bc80      	pop	{r7}
 80006ca:	4770      	bx	lr
 80006cc:	40023800 	.word	0x40023800

080006d0 <main>:

void App_voidDelay(void);


int main(void)
{
 80006d0:	b580      	push	{r7, lr}
 80006d2:	af00      	add	r7, sp, #0

	/*System Clock is 8MHz from HSI*/
	MRCC_voidInitSystemClk();
 80006d4:	f7ff ffe2 	bl	800069c <MRCC_voidInitSystemClk>

	/*Enable GPIO Peripheral clock*/
	MRCC_voidEnablePeripheralClock(AHB1,_PERIPHERAL_EN_GPIOA ) ;
 80006d8:	2100      	movs	r1, #0
 80006da:	2000      	movs	r0, #0
 80006dc:	f7ff ff92 	bl	8000604 <MRCC_voidEnablePeripheralClock>

    /*Set Pin Mode --> Output*/
	MGPIO_voidSetPinMode(_GPIOA_PORT, _PIN_0, _MODE_OUTPUT) ;
 80006e0:	2201      	movs	r2, #1
 80006e2:	2100      	movs	r1, #0
 80006e4:	2000      	movs	r0, #0
 80006e6:	f7ff fd75 	bl	80001d4 <MGPIO_voidSetPinMode>

	/*Out put Push Pull*/
	MGPIO_voidSetPinOutPutType(_GPIOA_PORT,_PIN_0,_OUTPUT_TYPE_PUSH_PULL);
 80006ea:	2200      	movs	r2, #0
 80006ec:	2100      	movs	r1, #0
 80006ee:	2000      	movs	r0, #0
 80006f0:	f7ff fde6 	bl	80002c0 <MGPIO_voidSetPinOutPutType>


	/*Pin Speed*/
	MGPIO_voidSetPinOutSpeed(_GPIOA_PORT, _PIN_0, _OUTPUT_SPEED_LOW);
 80006f4:	2200      	movs	r2, #0
 80006f6:	2100      	movs	r1, #0
 80006f8:	2000      	movs	r0, #0
 80006fa:	f7ff fe51 	bl	80003a0 <MGPIO_voidSetPinOutSpeed>


	/*Pin Value High*/
    MGPIO_voidWriteData(_GPIOA_PORT, _PIN_0, _HIGH) ;
 80006fe:	2201      	movs	r2, #1
 8000700:	2100      	movs	r1, #0
 8000702:	2000      	movs	r0, #0
 8000704:	f7ff feba 	bl	800047c <MGPIO_voidWriteData>
    /* Loop forever */
	while(1)
	{
	    MGPIO_voidWriteData(_GPIOA_PORT, _PIN_0, _HIGH) ;
 8000708:	2201      	movs	r2, #1
 800070a:	2100      	movs	r1, #0
 800070c:	2000      	movs	r0, #0
 800070e:	f7ff feb5 	bl	800047c <MGPIO_voidWriteData>
	    App_voidDelay();
 8000712:	f000 f809 	bl	8000728 <App_voidDelay>
	    MGPIO_voidWriteData(_GPIOA_PORT, _PIN_0, _LOW) ;
 8000716:	2200      	movs	r2, #0
 8000718:	2100      	movs	r1, #0
 800071a:	2000      	movs	r0, #0
 800071c:	f7ff feae 	bl	800047c <MGPIO_voidWriteData>
	    App_voidDelay();
 8000720:	f000 f802 	bl	8000728 <App_voidDelay>
	    MGPIO_voidWriteData(_GPIOA_PORT, _PIN_0, _HIGH) ;
 8000724:	e7f0      	b.n	8000708 <main+0x38>
	...

08000728 <App_voidDelay>:
	}
}

void App_voidDelay(void)
{
 8000728:	b480      	push	{r7}
 800072a:	b083      	sub	sp, #12
 800072c:	af00      	add	r7, sp, #0
	u32 i  ;
	for(i = 0 ; i<2000000;i++)
 800072e:	2300      	movs	r3, #0
 8000730:	607b      	str	r3, [r7, #4]
 8000732:	e003      	b.n	800073c <App_voidDelay+0x14>
	{
		asm("NOP") ;
 8000734:	bf00      	nop
	for(i = 0 ; i<2000000;i++)
 8000736:	687b      	ldr	r3, [r7, #4]
 8000738:	3301      	adds	r3, #1
 800073a:	607b      	str	r3, [r7, #4]
 800073c:	687b      	ldr	r3, [r7, #4]
 800073e:	4a04      	ldr	r2, [pc, #16]	; (8000750 <App_voidDelay+0x28>)
 8000740:	4293      	cmp	r3, r2
 8000742:	d9f7      	bls.n	8000734 <App_voidDelay+0xc>
	}



}
 8000744:	bf00      	nop
 8000746:	bf00      	nop
 8000748:	370c      	adds	r7, #12
 800074a:	46bd      	mov	sp, r7
 800074c:	bc80      	pop	{r7}
 800074e:	4770      	bx	lr
 8000750:	001e847f 	.word	0x001e847f

08000754 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000754:	480d      	ldr	r0, [pc, #52]	; (800078c <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000756:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000758:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 800075c:	480c      	ldr	r0, [pc, #48]	; (8000790 <LoopForever+0x6>)
  ldr r1, =_edata
 800075e:	490d      	ldr	r1, [pc, #52]	; (8000794 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000760:	4a0d      	ldr	r2, [pc, #52]	; (8000798 <LoopForever+0xe>)
  movs r3, #0
 8000762:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000764:	e002      	b.n	800076c <LoopCopyDataInit>

08000766 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000766:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000768:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800076a:	3304      	adds	r3, #4

0800076c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 800076c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800076e:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000770:	d3f9      	bcc.n	8000766 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000772:	4a0a      	ldr	r2, [pc, #40]	; (800079c <LoopForever+0x12>)
  ldr r4, =_ebss
 8000774:	4c0a      	ldr	r4, [pc, #40]	; (80007a0 <LoopForever+0x16>)
  movs r3, #0
 8000776:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000778:	e001      	b.n	800077e <LoopFillZerobss>

0800077a <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800077a:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 800077c:	3204      	adds	r2, #4

0800077e <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800077e:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000780:	d3fb      	bcc.n	800077a <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000782:	f000 f811 	bl	80007a8 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000786:	f7ff ffa3 	bl	80006d0 <main>

0800078a <LoopForever>:

LoopForever:
    b LoopForever
 800078a:	e7fe      	b.n	800078a <LoopForever>
  ldr   r0, =_estack
 800078c:	20010000 	.word	0x20010000
  ldr r0, =_sdata
 8000790:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000794:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000798:	08000810 	.word	0x08000810
  ldr r2, =_sbss
 800079c:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 80007a0:	2000001c 	.word	0x2000001c

080007a4 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80007a4:	e7fe      	b.n	80007a4 <ADC_IRQHandler>
	...

080007a8 <__libc_init_array>:
 80007a8:	b570      	push	{r4, r5, r6, lr}
 80007aa:	4d0d      	ldr	r5, [pc, #52]	; (80007e0 <__libc_init_array+0x38>)
 80007ac:	4c0d      	ldr	r4, [pc, #52]	; (80007e4 <__libc_init_array+0x3c>)
 80007ae:	1b64      	subs	r4, r4, r5
 80007b0:	10a4      	asrs	r4, r4, #2
 80007b2:	2600      	movs	r6, #0
 80007b4:	42a6      	cmp	r6, r4
 80007b6:	d109      	bne.n	80007cc <__libc_init_array+0x24>
 80007b8:	4d0b      	ldr	r5, [pc, #44]	; (80007e8 <__libc_init_array+0x40>)
 80007ba:	4c0c      	ldr	r4, [pc, #48]	; (80007ec <__libc_init_array+0x44>)
 80007bc:	f000 f818 	bl	80007f0 <_init>
 80007c0:	1b64      	subs	r4, r4, r5
 80007c2:	10a4      	asrs	r4, r4, #2
 80007c4:	2600      	movs	r6, #0
 80007c6:	42a6      	cmp	r6, r4
 80007c8:	d105      	bne.n	80007d6 <__libc_init_array+0x2e>
 80007ca:	bd70      	pop	{r4, r5, r6, pc}
 80007cc:	f855 3b04 	ldr.w	r3, [r5], #4
 80007d0:	4798      	blx	r3
 80007d2:	3601      	adds	r6, #1
 80007d4:	e7ee      	b.n	80007b4 <__libc_init_array+0xc>
 80007d6:	f855 3b04 	ldr.w	r3, [r5], #4
 80007da:	4798      	blx	r3
 80007dc:	3601      	adds	r6, #1
 80007de:	e7f2      	b.n	80007c6 <__libc_init_array+0x1e>
 80007e0:	08000808 	.word	0x08000808
 80007e4:	08000808 	.word	0x08000808
 80007e8:	08000808 	.word	0x08000808
 80007ec:	0800080c 	.word	0x0800080c

080007f0 <_init>:
 80007f0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80007f2:	bf00      	nop
 80007f4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80007f6:	bc08      	pop	{r3}
 80007f8:	469e      	mov	lr, r3
 80007fa:	4770      	bx	lr

080007fc <_fini>:
 80007fc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80007fe:	bf00      	nop
 8000800:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000802:	bc08      	pop	{r3}
 8000804:	469e      	mov	lr, r3
 8000806:	4770      	bx	lr
