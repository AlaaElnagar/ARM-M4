
#include "LSTD_TYPES.h"

#include "MRCC_interface.h"
#include "MGPIO_interface.h"
#include "MNVIC_Interface.h"
#include "MDMA_Interface.h"
#include "MUSART_Interface.h"

void SystemInit(void)
{
	/*************************************************************************************************************************/
	/********************************************Step 1: initialize System Clock**********************************************/
	/*************************************************************************************************************************/
	MRCC_vInitSystemCLK();
	/*************************************************************************************************************************/
	/********************************************Step 2: Enable peripherls clock**********************************************/
	/*************************************************************************************************************************/
	MRCC_vEnableClock(AHB1_BUS, _PERIPHERAL_EN_GPIOA); //Enable CLK For GPIOA  At AHB1
	MRCC_vEnableClock(AHB1_BUS, _PERIPHERAL_EN_GPIOC); //Enable CLK For GPIOC  At AHB1
	MRCC_vEnableClock(APB2_BUS, PERIPHERAL_EN_USART6); //Enable CLK Of UART6   At APB2
	MRCC_vEnableClock(APB2_BUS, PERIPHERAL_EN_USART1); //Enable CLK Of UART1   At APB2
	/*************************************************************************************************************************/
	/********************************************Step 3: Configur UART1 ,UART2  Pins******************************************/
	/*************************************************************************************************************************/
	MGPIO_vSetPinMode(_GPIOC_PORT,_PIN_6,_MODE_ALTF);    //TX-->UART6
	MGPIO_vSetPinMode(_GPIOC_PORT,_PIN_7,_MODE_ALTF);    //RX-->UART6
	MGPIO_vSetPinAltFn(_GPIOC_PORT, _PIN_6, _ALTFN_8);   //TX-->UART6
	MGPIO_vSetPinAltFn(_GPIOC_PORT, _PIN_7, _ALTFN_8);   //RX-->UART6

	MGPIO_vSetPinMode(_GPIOA_PORT,_PIN_9,_MODE_ALTF);     //TX-->UART1
	MGPIO_vSetPinMode(_GPIOA_PORT,_PIN_10,_MODE_ALTF);    //RX-->UART1
	MGPIO_vSetPinAltFn(_GPIOA_PORT, _PIN_9, _ALTFN_7);    //TX-->UART1
	MGPIO_vSetPinAltFn(_GPIOA_PORT, _PIN_10, _ALTFN_7);   //RX-->UART1

	/*************************************************************************************************************************/
	/********************************************Step 4: initialize Output Pins  in System ***********************************/
	/*************************************************************************************************************************/
	for(int i =0; i<8; i++)
	{
		MGPIO_vSetPinMode(_GPIOA_PORT,i,_MODE_OUTPUT);
		MGPIO_vSetPinOutPutType(_GPIOA_PORT,i,_OUTPUT_TYPE_PUSH_PULL );
		MGPIO_vSetPullType(_GPIOA_PORT, i, _PULL_OFF);
		MGPIO_vSetPinOutSpeed(_GPIOA_PORT,i,_OUTPUT_SPEED_LOW);
	}
	for(int i =0; i<4; i++)
	{
		MGPIO_vSetPinMode(_GPIOC_PORT,i,_MODE_OUTPUT);
		MGPIO_vSetPinOutPutType(_GPIOC_PORT,i,_OUTPUT_TYPE_PUSH_PULL );
		MGPIO_vSetPullType(_GPIOC_PORT, i, _PULL_OFF);
		MGPIO_vSetPinOutSpeed(_GPIOC_PORT,i,_OUTPUT_SPEED_LOW);
	}
	/*************************************************************************************************************************/
	/********************************************Step 5: initialize Input Pins  in System ************************************/
	/*************************************************************************************************************************/




	/*************************************************************************************************************************/
	/********************************************Step 6: Enable Peripherials interrupt from NVIC *****************************/
	/*************************************************************************************************************************/
	MNVICE_vEnableInterrupt(71); 	//Enable uart6 from NVIC


	/*************************************************************************************************************************/
	/********************************************Step 7:  initialize system Peripherials *************************************/
	/*************************************************************************************************************************/
	MUART_vInit(6);     //Enable UART 6
	MUART_vEnable(6);


}
int main(void)
{
	/*************************************************************************************************************************/
	/********************************Step 1: initialize System Clock is 16MHz from HSI****************************************/
	/*************************************************************************************************************************/

	MRCC_voidInitSystemClk();

	/*************************************************************************************************************************/
	/********************************************Step 2: Enable peripherls clock**********************************************/
	/*************************************************************************************************************************/
	MRCC_vEnableClock(AHB1_BUS, _PERIPHERAL_EN_GPIOA); //Enable CLK For GPIOA  At AHB1
	MRCC_vEnableClock(AHB1_BUS, _PERIPHERAL_EN_GPIOC); //Enable CLK For GPIOC  At AHB1
	MRCC_vEnableClock(APB2_BUS, PERIPHERAL_EN_USART6); //Enable CLK Of UART6   At APB2
	MRCC_vEnableClock(APB2_BUS, PERIPHERAL_EN_USART1); //Enable CLK Of UART1   At APB2

	/*Enable GPIO Peripheral clock*/
	MRCC_voidEnablePeripheralClock(AHB1,_PERIPHERAL_EN_GPIOA ) ;
	/*Set Pin Mode --> Output*/
	MGPIO_voidSetPinMode(_GPIOA_PORT, _PIN_0, _MODE_OUTPUT) ;
	/*Out put Push Pull*/
	MGPIO_voidSetPinOutPutType(_GPIOA_PORT,_PIN_0,_OUTPUT_TYPE_PUSH_PULL);
	/*Pin Speed*/
	MGPIO_voidSetPinOutSpeed(_GPIOA_PORT, _PIN_0, _OUTPUT_SPEED_LOW);

	/*1- Enable RCC For USART1*/
	MRCC_vEnableClock(APB2_BUS, PERIPHERAL_EN_USART1); //Enable CLK Of UART1   At APB2



	/* I Will Put Data At source Array And Transfer It From */
	u32 Local_u32SRC_Array[SIZE];
	/*Recive Data From Source Array*/
	u32 Local_u32DST_Array[SIZE];
	/*Init Source Array  */
	u32 Local_u32index=0 ;
	for(Local_u32index =0 ; Local_u32index <=SIZE ; Local_u32index ++)
	{
		/*Init Source Array From 0 Too Size {0,1,,2,3,..............,SIZE}*/
		Local_u32SRC_Array[Local_u32index] =Local_u32index ;
	}

	/*2- EN DMA2 Stream 0 NVIC */
	//MNVIC_voidEnableInterrupt(DMA1_Stream0) ;
	MNVIC_voidEnableInterrupt(DMA2_Stream0);
	/*Set CallBack Function*/
	MDMA_VidSetCallBackChannel1(DMA_CallBack) ;

	/*3- Init DMA */
	MDMA_vInit(DMA2_CHANNEL0);

	/*4- Set Source Address & Distination */
	MDMA_vSetAddress(Local_u32SRC_Array, Local_u32DST_Array, SIZE, DMA2_CHANNEL0) ;

	/*5- Enable DMA_2_CHANNEL0*/

	MDMA_vStreamEnable(DMA2_CHANNEL0) ;

	//For Processor
	u16 i = 0;
	for( i = 0 ; i < SIZE ;i++ ){

		DESTINATION2[i]=SOURCE2[i];

	}
	/* Loop forever */
	while(1)
	{
	}
}












